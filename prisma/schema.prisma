// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Cuisine {
  ITALIAN
  MEXICAN
  CHINESE
  JAPANESE
  INDIAN
  AMERICAN
  FRENCH
  KOREAN
  BRITISH
  MEDITERRANEAN
  CARIBBEAN
  CONTINENTAL
  null
}

model User {
  id                  Int      @id @default(autoincrement())
  email               String   @unique
  passwordHash        String
  name                String
  cuisinePreference   Cuisine? @default(null)
  dieticianData       Json?
  isVerified          Boolean  @default(false)
  isBlocked           Boolean  @default(false)
  authenticationToken String?
  resetPasswordToken  String?
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  Orders              Order[]
}

model Restaurant {
  id                 Int        @id @default(autoincrement())
  email              String     @unique
  passwordHash       String
  name               String
  subdomain          String     @unique
  cuisineType        Cuisine?   @default(null)
  location           String
  isVerified         Boolean    @default(false)
  isBlocked          Boolean    @default(false)
  authenticationToken String?
  resetPasswordToken String?
  createdAt          DateTime   @default(now())
  updatedAt          DateTime   @updatedAt
  deletedAt          DateTime?
  menuItems          MenuItem[]
  Orders             Order[]
}

model MenuItem {
  id                Int       @id @default(autoincrement())
  restaurantId      Int
  name              String
  description       String?
  price             Float
  quantity          Int
  nutritionalValues Json?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  deletedAt         DateTime?
  OrderItems        OrderItem[]

  restaurant Restaurant @relation(fields: [restaurantId], references: [id])
}

model Order {
  id           Int        @id @default(autoincrement())
  userId       Int        
  restaurantId Int        
  totalPrice   Float
  status       String
  createdAt    DateTime   @default(now())
  OrderItems   OrderItem[]

  user         User       @relation(fields: [userId], references: [id])
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
}

model OrderItem {
  id         Int      @id @default(autoincrement())
  orderId    Int      
  menuItemId Int      
  quantity   Int
  price      Float

  order      Order    @relation(fields: [orderId], references: [id])
  menuItem   MenuItem @relation(fields: [menuItemId], references: [id])
}